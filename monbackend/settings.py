# """
# Django settings for monbackend project.

# Generated by 'django-admin startproject' using Django 5.2.3.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """
# # import pymysql
# # pymysql.install_as_MySQLdb()
# SITE_URL = "http://127.0.0.1:8000"
# MVOLA_SANDBOX_TOKEN = "eyJ4NXQiOiJaREUzWW1RNFkyRmtZekprTmpNMk5EVmtZVE5oTkRSak16azFObVEyWXprelkyUTFaVFZqWVEiLCJraWQiOiJNVGRsTXpneFpqZGtNakk0WmpKbVlUZ3dNRFJpWWpNMU1tUmhOamxoTUdNME1XTmtPV05tT1RobU16VXlNMlUxTkRZNE5UWXhOMk01TW1SbU5XUTRPQV9SUzI1NiIsInR5cCI6ImF0K2p3dCIsImFsZyI6IlJTMjU2In0"
# import os
# import cloudinary
# import cloudinary.uploader
# import cloudinary.api
# from pathlib import Path
# from dotenv import load_dotenv
# load_dotenv()


# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# # SECRET_KEY = 'django-insecure-gybr)@9q7a&l&k$d6%xtwu51v3m5q%95hja(#%v2yno^t2d5=a'

# # SECURITY WARNING: don't run with debug turned on in production!




# # Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework_simplejwt',
#     'rest_framework',
#     'corsheaders',
#     'responsable',
#     'client',
#     'produit',
#     'gestion',
#     'paiement',
#     'achats',
# ]

# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]
# CORS_ALLOW_ALL_ORIGINS = True
# ROOT_URLCONF = 'monbackend.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'monbackend.wsgi.application'
# DB_LIVE = os.getenv("DB_LIVE")
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
#     'DEFAULT_RENDERER_CLASSES': (
#         'rest_framework.renderers.JSONRenderer',          # JSON pour les appels API
#         'rest_framework.renderers.BrowsableAPIRenderer',  # Formulaire simple dans le navigateur
#     )
# }


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# # if DB_LIVE in ["False", False]:
# #     DATABASES = {
# #         'default': {
#             # 'ENGINE': 'django.db.backends.postgresql',
#             # 'NAME': 'test',
#             # 'USER': 'postgres',
#             # 'PASSWORD': '1234',
#             # 'HOST': 'localhost',
#             # 'PORT': '5432',
# #         }
# #     }

# # else :

# # DATABASES = {
# #         'default': {
# #             'ENGINE': 'django.db.backends.mysql',
# #             'NAME': os.getenv("DB_NAME"),
# #             'USER': os.getenv("DB_USER"),
# #             'PASSWORD': os.getenv("DB_PASSWORD"),
# #             'HOST': os.getenv("DB_HOST"), 
# #             'PORT': os.getenv("DB_PORT"),        
# #         }
# #     }

# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.mysql',
# #         'NAME': 'aufsarl1_produit',
# #         'USER': 'aufsarl1_benesrf',
# #         'PASSWORD': 'BenesRf@2025',
# #         'HOST': 'hala.gasyweb.com', 
# #         'PORT': '3306',        
# #     }
# # }

# # DATABASES = {
# #     'default': {
# #             'ENGINE': 'django.db.backends.postgresql',
# #             'NAME': 'auf-sarl',
# #             'USER': 'postgres',
# #             'PASSWORD': '1234',
# #             'HOST': 'localhost',
# #             'PORT': '5432',
# #     }
# # }
# import dj_database_url

# SECRET_KEY = os.environ.get(
#     'DJANGO_SECRET_KEY',
#     'django-insecure-gybr)@9q7a&l&k$d6%xtwu51v3m5q%95hja(#%v2yno^t2d5=a'  # clé locale par défaut
# )

# # Mode production
# DEBUG = os.environ.get('DEBUG', 'False') == 'True'

# # Configuration PostgreSQL depuis Render
# DATABASES = {
#     'default': dj_database_url.parse(
#         os.environ.get(
#             'DATABASE_URL',
#             'postgresql://postgre:5kr7i1RC8OFbbsX3fzqptTAE3gP91USM@dpg-d3o83ud6ubrc73a85cj0-a.oregon-postgres.render.com/aufsarl'
#         ),
#         conn_max_age=600,
#         ssl_require=True
#     )
# }
# DEBUG = True  # ⚠️ Mettre True uniquement en dev, False en prod



# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/
# # settings.py

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'tinyroane@gmail.com'          # Remplace par ton email Gmail
# EMAIL_HOST_PASSWORD = 'vtpu jouc llfs nhau'                # Mot de passe d'application Gmail, pas ton mot de passe normal
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# STATIC_URL = 'static/'
# STATIC_ROOT = BASE_DIR / 'staticfiles' 
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# # settings.py

# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOWED_ORIGINS = [
#     "https://venteproduit.auf-sarlu.mg",
#     "https://vente.auf-sarlu.mg",# frontend
#     "https://myvente.auf-sarlu.mg",
#     "https://myapp.auf-sarlu.mg",# frontend
#     "http://localhost:3000",       # dev local si besoin
# ]

# # ----- HOSTS -----
# ALLOWED_HOSTS = [
#     "api.auf-sarlu.mg",
#     "app.auf-sarlu.mg",
#     "venteproduit.auf-sarlu.mg",
#     "lu.auf-sarlu.mg",
#     "vente.auf-sarlu.mg",
#     "myapp.auf-sarlu.mg",
#     "myvente.auf-sarlu.mg",
#     "localhost",
#     "projetfin.onrender.com"
# ]
# # ALLOWED_HOSTS = ['127.0.0.1', 'localhost']


# cloudinary.config(
#     cloud_name=os.environ.get("CLOUDINARY_NAME"),
#     api_key=os.environ.get("CLOUDINARY_KEY"),
#     api_secret=os.environ.get("CLOUDINARY_SECRET"),
# )

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

"""
Django settings for monbackend project.
Generated by 'django-admin startproject' using Django 5.2.3.
"""
import os
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url
import cloudinary
import cloudinary.uploader
import cloudinary.api

load_dotenv()

# ----- BASE DIR -----
BASE_DIR = Path(__file__).resolve().parent.parent

# ----- SECRET KEY -----
SECRET_KEY = os.environ.get(
    "DJANGO_SECRET_KEY",
    "django-insecure-gybr)@9q7a&l&k$d6%xtwu51v3m5q%95hja(#%v2yno^t2d5=a"
)

# ----- DEBUG -----
DEBUG = False

# ----- ALLOWED HOSTS -----
ALLOWED_HOSTS = [
    "api.auf-sarlu.mg",
    "app.auf-sarlu.mg",
    "venteproduit.auf-sarlu.mg",
    "lu.auf-sarlu.mg",
    "vente.auf-sarlu.mg",
    "myapp.auf-sarlu.mg",
    "myvente.auf-sarlu.mg",
    "localhost",
    "projetfin.onrender.com",
]

# ----- APPLICATIONS -----
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework_simplejwt",
    "corsheaders",
    "cloudinary",
    "cloudinary_storage",
    "responsable",
    "client",
    "produit",
    "gestion",
    "paiement",
    "achats",
]

# ----- MIDDLEWARE -----
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# ----- CORS -----
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "https://venteproduit.auf-sarlu.mg",
    "https://vente.auf-sarlu.mg",
    "https://myvente.auf-sarlu.mg",
    "https://myapp.auf-sarlu.mg",
    "http://localhost:3000",
]

# ----- URLS -----
ROOT_URLCONF = "monbackend.urls"
WSGI_APPLICATION = "monbackend.wsgi.application"

# ----- TEMPLATES -----
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ----- DATABASE -----
DATABASES = {
    "default": dj_database_url.parse(
        os.environ.get(
            "DATABASE_URL",
            "postgresql://postgre:5kr7i1RC8OFbbsX3fzqptTAE3gP91USM@dpg-d3o83ud6ubrc73a85cj0-a.oregon-postgres.render.com/aufsarl"
        ),
        conn_max_age=600,
        ssl_require=True,
    )
}

# ----- PASSWORD VALIDATION -----
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ----- INTERNATIONALIZATION -----
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ----- STATIC & MEDIA -----
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# ----- REST FRAMEWORK -----
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
}

# ----- EMAIL -----
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "tinyroane@gmail.com"
EMAIL_HOST_PASSWORD = "vtpu jouc llfs nhau"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# ----- CLOUDINARY -----
cloudinary.config(
    cloud_name=os.environ.get("CLOUDINARY_NAME"),
    api_key=os.environ.get("CLOUDINARY_KEY"),
    api_secret=os.environ.get("CLOUDINARY_SECRET"),
)
DEFAULT_FILE_STORAGE = "cloudinary_storage.storage.MediaCloudinaryStorage"

# ----- DEFAULT PK FIELD -----
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
